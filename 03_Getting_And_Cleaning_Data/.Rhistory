TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identifcal("twins","twins")
identical("twins","twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints)
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5)
)
y<-function(x){
x}
y(1)
submit<-function(x){x}
submit<-function(x){x}
submit<-function(x){x}
boring_function('My first function!')
boring_function
my_mean
my_mean()
boring_function
my_mean(c(1:20))
s
sd
ss
sss
submit()
submit(x)
my_mean(c(4,5,10))
submit()
submit(100)
submit(100)
submit(100)
submit()
remainder(100)
submit
submit
submit(1)
submit(10)
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4,div=2)
args(remainder)
submit()
submit(x)
submit(x)
submit(x)
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sum,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6
)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[2]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit(1)
submit(1)
submit()
submit(x)
submit(x)
submit(x)
telegram("Good", "Morning")
submit(x)
sumit(x)
paste()
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
paste("News from", "today where",  "students took to the streets in protest of the new", noun, "being installed on campus.")
paste("News from", "today where",  "students took to the streets in protest of the new",  "being installed on campus.")
submit()
submit(x)
submit(1)
mad_libs("Ram","Mohan","Rao")
submit(1)
paste("I","love","R!")
paste("I","%p%","R!")
paste("I",%p%,"R!")
paste("I" %p% "R!")
paste("I" %p% "love" %p% "R!")
'I' %p% 'love' %p% 'R!'
q()
cube<-function(x,n){
x^n
}
cube(3)
cube(3)
x<-1:10
if(x>5){
x<-0
}
x<-1:10
f<-function(x){
g<-function(x){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
swirl()
librabry("swirl")
load("swirl")
library("swirl")
load("C:\\Users\\Administrator\\Documents\\.RData")
library("swirl")
swirl()
dl<-Sys.Date()
d1<-Sys.Date()
class(d1)
unclass(d1)
dl
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
POSIX1t(Sys.time())
POSIXlt(Sys.time())
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(d1)
months(t1)
quarters(t1)
quarters(t2)
t<-"October 17, 1986 08:24"
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.Time()-t1
Sys.time()1t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
2
q()
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
cacheSolve <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data.")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
str(ls)
x<-rnorm(100,2,4)
summary(x)
f<-gl(40,10)
str(f)
library(datasets)
head(airquality)
str(airquality)
m<-matrix(rnorm(100), 10,10)
str(m)
s<-split(airquality, airquality$Month)
str(s)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10,1)
rpois(10,2)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)y<-0.5+2*x+e
summary(y)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(20)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(10)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(letters,5)
sample(letters,5)
sample(letters,5)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
set.seed(10)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
system.time(readlines("https://ooredoo.qa"))
system.time(readlines("https://www.ooredoo.qa/portal/OoredooQatar/home"))
system.time(readLines("https://www.ooredoo.qa/portal/OoredooQatar/home"))
system.time(readLines("https://www.ooredoo.qa"))
Rprof(readLines("https://www.ooredoo.qa"))
library("swirl")
swirl()
ls()
class(planets)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants$Active_Growth_Period)
str(plants)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
sample()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(1:0,100, c(0.3,0.7))
flips<-sample(1:0,100, probs=c(0.3,0.7))
flips<-sample(1:0,100,null, probs=c(0.3,0.7))
flips<-sample(1:0,100,null, prob=c(0.3,0.7))
flips<-sample(1:0,100,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips
flips2
sum(flips2)
rnorm
rnorm()
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cards)
head(cars)
plot(cars)
?pot
?plot
plot(cars$speed, cars$dist)
plot(cars$dist, cars$speed)
plot(cars$speed, cars$dist, xlab="Speed")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars$speed, cars$dist, ylab="Stopping Distance")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance", main="My Plot")
plot(cars$speed, cars$dist, main="My Plot")
plot(cars,main="My Plot")
plot(cars,title="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10,15))
plot(cars,pch=2)
ls()
data(mtcars)
boxplot(mtcars)
?boxplot
boxplot(mtcars$mpg~mtcars$cyl, data=mtcars)
boxplot(formula=mpg~cyl, data=mtcars)
hist(mtcars$mpg)
q()
setwd("D:/Datascience")
if(!dir.exists("/data"))
if(!dir.exists("/data"))
{
dir.create("data")
}
if(!file.exists("data"))
if(!file.exists("data"))
setwd("/courcera-datascience/03_Getting_And_Cleaning_Data")
if(!file.exists("data"))
{
dir.create("data")
}
setwd("/courcera-datascience/03_Getting_And_Cleaning_Data")
setwd("courcera-datascience/03_Getting_And_Cleaning_Data")
if(!file.exists("data"))
{
dir.create("data")
}
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv", method="curl")
list.files("./data")
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.csv", method="curl")
list.files("./data")
dateDownloaded<-date()
dateDownloaded
cameraData<- read.table("./data/cameras.csv")
head(cameraData)
cameraData<- read.table("./data/cameras.csv", sep=",", header = TRUE)
head(cameraData)
cameraData<- read.csv("./data/cameras.csv", header = TRUE)
head(cameraData)
head(cameraData)
cameraData<- read.csv("./data/cameras.csv", header = TRUE, quote = "")
head(cameraData)
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xlsx?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.xlsx", method="curl")
list.files("./data")
dateDownloaded<-date()
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD&bom=true&format=true"
download.file(fileUrl, destfile = "./data/cameras.xlsx", method="curl")
list.files("./data")
dateDownloaded<-date()
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD&bom=true&format=true"
download.file(fileUrl, destfile = "./data/cameras.xlsx", method="curl")
list.files("./data")
dateDownloaded<-date()
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.tsv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.xlsx", method="curl")
list.files("./data")
dateDownloaded<-date()
library(xlsx)
cameraData<-read.xlsx('./data/cameras.xlsx', sheetIndex=1,header=TRUE)
library(xlsx)
install.packages("xlsx")
library(xlsx)
cameraData<-read.xlsx('./data/cameras.xlsx', sheetIndex=1,header=TRUE)
head(cameraData)
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.xml?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.xml", method="curl")
list.files("./data")
dateDownloaded<-date()
library(XML)
install.packages("XML")
library(XML)
cameraData<-xmlTreeParse('./data/cameras.xml',useInternal=TRUE)
rootNode<-xmlRoot(cameraData)
xmlNode(rootNode)
cameraData<-xmlTreeParse('http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens',useInternal=TRUE)
rootNode<-xmlRoot(cameraData)
xmlNode(rootNode)
cameraData<-xmlTreeParse('http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens',useInternal=TRUE)
rootNode<-xmlRoot(cameraData)
cameraData
doc<-xmlTreeParse('http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens',useInternal=TRUE)
scores<-xpathSApply(doc,"//li[@class='score']",xmlValue)
teams<-xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
doc<-xmlTreeParse('http://www.espn.com/nfl/team/_/name/bal/baltimore-ravens',useInternal=TRUE)
scores<-xpathSApply(doc,"//li[@class='score']",xmlValue)
doc
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.json?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/cameras.json", method="curl")
list.files("./data")
dateDownloaded<-date()
library(jsonlite)
fileUrl<-"https://data.baltimorecity.gov/api/views/dz54-2aru/rows.json?accessType=DOWNLOAD"
jsonData<-fromJSON(fileUrl)
names(jsonData)
jsonData
names(jsonData.meta.view)
names(jsonData.meta)
jsonData.meta
names(jsonData$meta)
names(jsonData$meta$view)
myjson<- fromJSON(jsonData$meta$view)
myjson<- fromJSON(as.character(jsonData$meta$view)
myjson<- fromJSON(as.character(jsonData$meta$view))
tables()
DT[2,]
library(data.table)
DF=data.frame(x=rnorm(9), y=rep(c("a","b","c"),each=3),z=rnorm(9))
DF
DT=data.table(x=rnorm(9),y=rep(c("a","b","c"),each=3),z=rnorm(9))
head(DT,3)
head(DT,3)
tables()
tables()
DT[2,]
#subset first 2 rows
DT[2,]
DT[DT$y="a",]
DT[DT$y=="a",]
##ubset based on the rows
DT[c(2,3),]
##subset based on columns
DT[,c(2,3)]
##expression
k={print(10);5}
k
print(k)
DT[,list(mean(x),sum(z))]
##Add new column
DT[,w:z^2]
##Add new column
DT[,w:=z^2]
DT
DT2<-DT
DT2
##Add column based on the expression
DT[,m:={tmp<-(x+z); log2(tmp+5)}]
DT
##Plyr like operations
DT[,a:=x>0]
DT
DT[,b:=mean(x+w), by=a]
DT
##Special variables
DT<-data.table(x=sample(letters[1:3],1E5,TRUE))
DT[,.N by=x]
DT[,.N ,by=x]
##Keys
DT<-data.table(x=rep(c("a","b","c"),each=100),y=rnorm(300))
setkey(DT,x)
DT['a']
###Joins
DT1<-data.table(x=c('a','a','b','dt1'),y=1:4)
DT2<-data.table(x=c('a','b','dt2'),z=5:7)
setkey(DT1,'x');setkey(DT2,x)
merge(DT1,DT2)
fileUrl<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./data/quitz.csv", method="curl")
list.files("./data")
quitzData1<- read.csv("./data/quitz.csv", header = TRUE, quote = "")
head(quitzData1)
names(quitzData1)
housing[VAL == 24, .N]
library(data.table)
housing <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
housing[VAL == 24, .N]
