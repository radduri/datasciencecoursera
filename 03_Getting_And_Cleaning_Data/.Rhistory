seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2),each=10)
num_vect <-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name<-c(my_char,"Ram Mohan Rao Adduri")
my_name
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
paste(c("X","Y","Z"), sep="")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS,1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-!is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,4,5)]
c(3,5,7)
i<-c(3,5,7)
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector_
dim(my_vector)
dim(my_vector)
attributes(my_vecotr)
attributes(my_vector)
my_vecotr
my_vector
class(my_vector)
my_matrix<-my_vector
matrinc()?
x
matrix()?
x
matrix?
x
info(matrix)
?"matrix"
?matrix
my_matrix2<-c(1:20)
my_matrix2<-matrix(1:20)
my_matrix2<-matrix(c(1:20))
my_matrix2<-matrix(1:20,c(4,5))
my_matrix2
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients, my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<-cnames
my_data
if(TRUE==TRUE)
{
}
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identifcal("twins","twins")
identical("twins","twins")
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints)
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5)
)
y<-function(x){
x}
y(1)
submit<-function(x){x}
submit<-function(x){x}
submit<-function(x){x}
boring_function('My first function!')
boring_function
my_mean
my_mean()
boring_function
my_mean(c(1:20))
s
sd
ss
sss
submit()
submit(x)
my_mean(c(4,5,10))
submit()
submit(100)
submit(100)
submit(100)
submit()
remainder(100)
submit
submit
submit(1)
submit(10)
remainder(5)
remainder(11,5)
remainder(divisor=11, num=5)
remainder(4,div=2)
args(remainder)
submit()
submit(x)
submit(x)
submit(x)
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sum,c(1.4,3.6,7.9,8.8))
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6
)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[3]},c(8,4,0))
evaluate(function(x){x[2]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit(1)
submit(1)
submit()
submit(x)
submit(x)
submit(x)
telegram("Good", "Morning")
submit(x)
sumit(x)
paste()
paste("News from", place, "today where", adjective, "students took to the streets in protest of the new", noun, "being installed on campus.")
paste("News from", "today where",  "students took to the streets in protest of the new", noun, "being installed on campus.")
paste("News from", "today where",  "students took to the streets in protest of the new",  "being installed on campus.")
submit()
submit(x)
submit(1)
mad_libs("Ram","Mohan","Rao")
submit(1)
paste("I","love","R!")
paste("I","%p%","R!")
paste("I",%p%,"R!")
paste("I" %p% "R!")
paste("I" %p% "love" %p% "R!")
'I' %p% 'love' %p% 'R!'
q()
cube<-function(x,n){
x^n
}
cube(3)
cube(3)
x<-1:10
if(x>5){
x<-0
}
x<-1:10
f<-function(x){
g<-function(x){
y+z
}
z<-4
x+g(x)
}
z<-10
f(3)
swirl()
librabry("swirl")
load("swirl")
library("swirl")
load("C:\\Users\\Administrator\\Documents\\.RData")
library("swirl")
swirl()
dl<-Sys.Date()
d1<-Sys.Date()
class(d1)
unclass(d1)
dl
d1
d2<-as.Date("1969-01-01")
unclass(d2)
t1<-Sys.time()
t1
class(t1)
unclass(t1)
POSIX1t(Sys.time())
POSIXlt(Sys.time())
as.POSIXlt(Sys.time())
t2<-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(d1)
months(t1)
quarters(t1)
quarters(t2)
t<-"October 17, 1986 08:24"
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.Time()-t1
Sys.time()1t1
Sys.time()-t1
difftime(Sys.time(),t1,units='days')
2
q()
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() x
setinverse <- function(inverse) inv <<- inverse
getinverse <- function() inv
list(set=set, get=get, setinverse=setinverse, getinverse=getinverse)
}
cacheSolve <- function(x, ...) {
inv <- x$getinverse()
if(!is.null(inv)) {
message("getting cached data.")
return(inv)
}
data <- x$get()
inv <- solve(data)
x$setinverse(inv)
inv
}
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
str(ls)
x<-rnorm(100,2,4)
summary(x)
f<-gl(40,10)
str(f)
library(datasets)
head(airquality)
str(airquality)
m<-matrix(rnorm(100), 10,10)
str(m)
s<-split(airquality, airquality$Month)
str(s)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10,1)
rpois(10,2)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)y<-0.5+2*x+e
summary(y)
set.seed(20)
x<-rnorm(100)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(20)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(10)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(letters,5)
sample(letters,5)
sample(letters,5)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
set.seed(10)
x<rbinom(100,1,0.5)
e<-rnorm(100,0,2)
y<-0.5+2*x+e
summary(y)
plot(x,y)
system.time(readlines("https://ooredoo.qa"))
system.time(readlines("https://www.ooredoo.qa/portal/OoredooQatar/home"))
system.time(readLines("https://www.ooredoo.qa/portal/OoredooQatar/home"))
system.time(readLines("https://www.ooredoo.qa"))
Rprof(readLines("https://www.ooredoo.qa"))
library("swirl")
swirl()
ls()
class(planets)
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants$Active_Growth_Period)
str(plants)
swirl()
ls()
class(plants)
dim(plants)
nrows(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
sample()
?sample
sample(1:6,4,replace=TRUE)
sample(1:6,4,replace=TRUE)
sample(1:20,10)
letters
LETTERS
sample(LETTERS)
flips<-sample(1:0,100, c(0.3,0.7))
flips<-sample(1:0,100, probs=c(0.3,0.7))
flips<-sample(1:0,100,null, probs=c(0.3,0.7))
flips<-sample(1:0,100,null, prob=c(0.3,0.7))
flips<-sample(1:0,100,prob=c(0.3,0.7))
flips<-sample(c(0,1),100,replace=TRUE,prob=c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size=100,prob=0.7)
flips2<-rbinom(1,size=100,prob=0.7)
flips2<-rbinom(100,size=1,prob=0.7)
flips
flips2
sum(flips2)
rnorm
rnorm()
?rnorm
rnorm(10)
rnorm(10,100,25)
rpois(5,10)
replicate(100,rpois(5,10))
my_pois<-replicate(100,rpois(5,10))
my_pois
cm<-colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cards)
head(cars)
plot(cars)
?pot
?plot
plot(cars$speed, cars$dist)
plot(cars$dist, cars$speed)
plot(cars$speed, cars$dist, xlab="Speed")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars$speed, cars$dist, ylab="Stopping Distance")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Stopping Distance", main="My Plot")
plot(cars$speed, cars$dist, main="My Plot")
plot(cars,main="My Plot")
plot(cars,title="My Plot Subtitle")
plot(cars,sub="My Plot Subtitle")
plot(cars,col=2)
plot(cars,xlim = c(10,15))
plot(cars,pch=2)
ls()
data(mtcars)
boxplot(mtcars)
?boxplot
boxplot(mtcars$mpg~mtcars$cyl, data=mtcars)
boxplot(formula=mpg~cyl, data=mtcars)
hist(mtcars$mpg)
q()
install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Getting and Cleaning Data")
library("swirl")
install_from_swirl("Getting and Cleaning Data")
swirl()
exit()
q()
setwd("D:\Datascience\courcera-datascience\03_Getting_And_Cleaning_Data")
setwd("D:/Datascience/courcera-datascience/03_Getting_And_Cleaning_Data")
getwd()
if(file.exists("./data")) {dir.create("./data")}
fileUrl<- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", method = curl)
restData<-read.csv("./data/restaurants.csv")
if(file.exists("./data")) {dir.create("./data")}
fileUrl<- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl, destfile = "./data/restaurants.csv", method = curl)
download.file(fileUrl, destfile = "./data/restaurants.csv", method ="curl")
restData<-read.csv("./data/restaurants.csv")
restData
s1<-seq(1,10,by2); s1
s1<-seq(1,10,by=2); s1
s2<-seq(1,10,length=3;s2)
s2<-seq(1,10,length=3); s2
restData$nearMe = restData$neighborhood %in% c("Roland PArk", "Homeland")
restData
restData$nearMe
restData$zipWrong = ifelse(restData$zipCode<0, TRUE, FALSE)
restData$zipWrong
table(restData$zipWrong, restData$zipCode<0)
restData$zipGroups = cut(restData$zipCode, breaks=quantile(restData$zipCode))
table(restData$zipGroups)
table(restData$zipGroups,restData$zipCode)
library(Hmisc)
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
restData$zipGroups =cut2(restData$zipCode, g=4)
table(rest)
table(restData$zipGroups)
restData$zcf <- factor(restData$zipCode)
restData$zcf[1:10]
class(restData$zcf)
library(plyr)
restData2<-mutate(restData,zipGroups=cut2(zipCode,g=4))
table(restData2$zipGroups)
library(reshape2)
head
head(mtcars)
library("dplyr")
chicago<-readRDS("chicago.rds")
library("data.table")
communities <- data.table::fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
